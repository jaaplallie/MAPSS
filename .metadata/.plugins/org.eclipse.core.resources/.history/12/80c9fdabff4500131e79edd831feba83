package Backend;

import java.util.ArrayList;
import java.io.File;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXParseException;

import Agents.ProductAgent;

public class XmlWriter {
	StringBuilder writer;
	
	public XmlWriter(){
		writer = new StringBuilder();
	}
	
	@SuppressWarnings("static-access")
	public void Write(Scenario scenario, String fileLocation){
		String scenarioName = "Undefined.";
		
		if(!scenario.scenarioName.isEmpty() || scenario.scenarioName != null){
			scenarioName = scenario.scenarioName;
		}
		
		  try {
			DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
	 
			// root elements
			Document doc = docBuilder.newDocument();
			Element rootElement = doc.createElement("scn");
			doc.appendChild(rootElement);
				Element rootname = doc.createElement("name");
				rootElement.appendChild(rootname);
				rootname.appendChild(doc.createTextNode(scenarioName));
				Element grd = doc.createElement("grd");
				rootElement.appendChild(grd);
					Element xsize = doc.createElement("xsize");
					xsize.appendChild(doc.createTextNode(scenario.scenario_Grid.getX()+""));
					grd.appendChild(xsize);
					Element ysize = doc.createElement("ysize");
					xsize.appendChild(doc.createTextNode(scenario.scenario_Grid.getY()+""));
					grd.appendChild(ysize);
					Element eqs = doc.createElement("eqs");
					grd.appendChild(eqs);
				Element prod = doc.createElement("prod");
				rootElement.appendChild(prod);
	 
			for(int y = 0; y < scenario.scenario_Grid.getGrid().length; y++){
				for(int x = 0; x < scenario.scenario_Grid.getGrid()[y].length; x++){
					//<EQ><NAME></NAME><XPOS></XPOS><YPOS></YPOS><ARGS></ARGS></EQ>
					Element new_eq = doc.createElement("eq");
						Element new_eq_name = doc.createElement("name");
						new_eq_name.appendChild(doc.createTextNode(scenario.scenario_Grid.getGrid()[y][x].getName()));
						new_eq.appendChild(new_eq_name);
						Element new_eq_xpos = doc.createElement("xpos");
						new_eq_xpos.appendChild(doc.createTextNode(scenario.scenario_Grid.getGrid()[y][x].getPosition()[0]+""));
						new_eq.appendChild(new_eq_xpos);
						Element new_eq_ypos = doc.createElement("ypos");
						new_eq_ypos.appendChild(doc.createTextNode(scenario.scenario_Grid.getGrid()[y][x].getPosition()[1]+""));
						new_eq.appendChild(new_eq_ypos);
						Element new_eq_args = doc.createElement("args");
						new_eq_args.appendChild(doc.createTextNode(scenario.scenario_Grid.getGrid()[y][x].getArgsString()));
						new_eq.appendChild(new_eq_args);
					eqs.appendChild(new_eq);
//					scenario.scenario_Grid.getGrid()[y][x].getName();
//					scenario.scenario_Grid.getGrid()[y][x].getPosition();
//					scenario.scenario_Grid.getGrid()[y][x].getArgs();
				}
			}
			
			//<P>P6<NPS>18</NPS><STEPS>11,2,11,0,14,11,16,1,6,9,21,15,18,3,6,19,7,11,</STEPS></P>
			for(ProductAgent pa : scenario.scenario_Products){
				Element new_prod = doc.createElement("p");
				new_prod.appendChild(doc.createTextNode(pa.getCode()));
				prod.appendChild(new_prod);
					Element new_prod_nps = doc.createElement("nps");
					new_prod_nps.appendChild(doc.createTextNode(""));
					new_prod.appendChild(new_prod_nps);
					Element new_prod_steps = doc.createElement("steps");
					new_prod_steps.appendChild(doc.createTextNode(pa.getArgsString()));
					new_prod.appendChild(new_prod_steps);
			}
			
			try {
				// write the content into xml file
				TransformerFactory transformerFactory = TransformerFactory.newInstance();
				Transformer transformer = transformerFactory.newTransformer();
				DOMSource source = new DOMSource(doc);
				//StreamResult result = new StreamResult(new File(fileLocation));
		 
				// Output to console for testing
				StreamResult result = new StreamResult(System.out);
				transformer.transform(source, result);
			}
			catch (NullPointerException ne) {
			    ne.printStackTrace();
			}
			catch (TransformerConfigurationException tce) {
			    System.out.println("* Transformer Factory error");
			    System.out.println(" " + tce.getMessage());

			    Throwable x = tce;
			    if (tce.getException() != null)
			        x = tce.getException();
			    x.printStackTrace(); 
			} 
			catch (TransformerException te) {
			    System.out.println("* Transformation error");
			    System.out.println(" " + te.getMessage());

			    Throwable x = te;
			    if (te.getException() != null)
			        x = te.getException();
			    x.printStackTrace();
			}
		  } 
		  catch (ParserConfigurationException e) {
			  e.printStackTrace();
		  }
		  finally{
			  System.out.println("Scenario File saved!");
		  }
	}
}
